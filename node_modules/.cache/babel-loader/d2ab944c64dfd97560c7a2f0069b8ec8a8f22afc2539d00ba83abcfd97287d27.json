{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngsha\\\\Documents\\\\GitHub\\\\ay2324s1-course-assessment-g47\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Here, you would typically send a request to your server to handle the password reset\n    // For this example, we'll simulate it by displaying a message.\n\n    // Replace this with your actual API endpoint\n    const resetPasswordEndpoint = \"/api/reset-password\";\n    fetch(resetPasswordEndpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(response => response.json()).then(data => {\n      setMessage(data.message);\n    }).catch(error => {\n      setMessage(\"An error occurred. Please try again later.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Back to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_s(ForgotPassword, \"tgSpMP9vfF6GNBbNf9NcNEW5Oz0=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","handleEmailChange","e","target","value","handleSubmit","preventDefault","resetPasswordEndpoint","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","onChange","required","href","_c","$RefreshReg$"],"sources":["C:/Users/ngsha/Documents/GitHub/ay2324s1-course-assessment-g47/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ForgotPassword() {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [message, setMessage] = useState(\"\");\r\n\r\n\tconst handleEmailChange = (e) => {\r\n\t\tsetEmail(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Here, you would typically send a request to your server to handle the password reset\r\n\t\t// For this example, we'll simulate it by displaying a message.\r\n\r\n\t\t// Replace this with your actual API endpoint\r\n\t\tconst resetPasswordEndpoint = \"/api/reset-password\";\r\n\r\n\t\tfetch(resetPasswordEndpoint, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ email }),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetMessage(data.message);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetMessage(\"An error occurred. Please try again later.\");\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Forgot Password</h2>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"email\">Email:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">Reset Password</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<p>{message}</p>\r\n\t\t\t<div>\r\n\t\t\t\t<a href=\"/\">Back to Login</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAChCJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC3BA,CAAC,CAACI,cAAc,CAAC,CAAC;;IAElB;IACA;;IAEA;IACA,MAAMC,qBAAqB,GAAG,qBAAqB;IAEnDC,KAAK,CAACD,qBAAqB,EAAE;MAC5BE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB;MAAM,CAAC;IAC/B,CAAC,CAAC,CACAiB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACfjB,UAAU,CAACiB,IAAI,CAAClB,OAAO,CAAC;IACzB,CAAC,CAAC,CACDmB,KAAK,CAAEC,KAAK,IAAK;MACjBnB,UAAU,CAAC,4CAA4C,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC;EAED,oBACCN,OAAA;IAAA0B,QAAA,gBACC1B,OAAA;MAAA0B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB9B,OAAA;MAAM+B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBAC5B1B,OAAA;QAAA0B,QAAA,gBACC1B,OAAA;UAAOgC,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC9B,OAAA;UACCiC,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVC,IAAI,EAAC,OAAO;UACZzB,KAAK,EAAEP,KAAM;UACbiC,QAAQ,EAAE7B,iBAAkB;UAC5B8B,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN9B,OAAA;QAAA0B,QAAA,eACC1B,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACP9B,OAAA;MAAA0B,QAAA,EAAIrB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB9B,OAAA;MAAA0B,QAAA,eACC1B,OAAA;QAAGsC,IAAI,EAAC,GAAG;QAAAZ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER;AAAC5B,EAAA,CA1DQD,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AA4DvB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}